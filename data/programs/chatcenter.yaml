
modalID: 1
title: ChatCenter - School End Project
date: 2018-2019
img: programs/chatcenter.png
githubLink: "https://github.com/EricTalv/ChatCenterV3"
category: Web Development
description:
  - subtitle: About
  - subdescription:  >
                     This ambitious project is on creating a socializing platform with a bit of a twist for my schools end-project.

                     This idea sparked from the common saying "Dont chat with strangers", well, in this case I go against what mom told us and created a soicalizing *platform*.                     

                     ChatCenter revolves around chatting to random strangers online, there are similar applications already but my app would utilize modern technologies, rich of features and would be scalable.
  - subtitle: Technologies
  - subdescription: >

                    My project basically was cut into two server sides.
                    I would use **nuxt.js** as my front-end framework and have it generate a static website.
                    To gather data, my back-end was built with **Laravels** back-end framework and with **axios** and API handling I was able to exchange data between these two servers.


                    Laravel took care of my database work and api handling,
                    Nuxt took care of my front-end routing and views.
                    **Vuex** let me work with my axios back-end API's and delivering them to the front-end.


                    As for visuals I used vuetify to craft components.
                    For the web-communication I would have used Laravel echo, but my project didn't make it so far.


                    I also got to work with other technologies along the way such as *express, node.js, bootstrap, materialize*

  - subtitle: Challenges
  - subdescription: >

                      There were many challenges, particularly the biggest challenge was the Idea itself, my initial Idea was to create a feature packed socializing website ***but*** and this was a big one, my ideas kind of spun out of control.


                      I had a very big interest in admin panels at the time, thus I wanted to create an admin panel of my own, thus I thought it would be cool to add a blogging capability to update whats going on on the page, little did I know, creating a blog where you can do **crud** operations in a web-based GUI would be quite a challenge but I still took it on.


                      This really delayed my whole project since along the way I would work on many **cherrypicked features** such as *lazy loading, laravel factory, ridiculous visual animations etc*.


                      So I pretty much started the project as one idea, but ended up adding more and more tech and ideas.  
                      Additionally I started this project when I was really fresh into web-development, thus I basically started off coding most routing and MVC architecture logic by hand myself, which took a ridiculous amount of time and well, that really didn't get far since then I started learning about frameworks


  - subtitle: Result
  - subdescription: >

                      The project came out quite lackluster.


                      I managed to create some minor things like lazy-loading, fetch data from my database through API's and well that was basically it.


                      Seems quite lackluster, but a huge chunk of work went into the start when I was a bit stubborn and tried creating all of the database work by hand where as the frameworks for them already existed.


                      but as for future, as my vocabulary in the web-development-community evolves, so when I've got enough time and money I definitely see this idea as very cool application that people could have fun with.